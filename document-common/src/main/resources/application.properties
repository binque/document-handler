## BoneCP has a few configuration options that need to be set. 
## As you perform monitoring on your database to obtain the best possible performance, you will find that some of the values below will require some tuning as per your application needs. 
## Keep in mind that besides the obvious database performance issues, a poorly configured connection pool can consume a considerable amount of CPU time which will slow your application down. 
## Note: BoneCP never spin-locks to obtain or release a connection.

## To configure BoneCP for use with the LazyConnectionDataSourceProxy
###########################################################################

jolbox.bonecp.driverClass=com.mysql.jdbc.Driver
# The JDBC connection string URL
jolbox.bonecp.jdbcUrl=jdbc:mysql://127.0.0.1:5432/document
# The DB username to use
jolbox.bonecp.username=root
# The DB password to use
jolbox.bonecp.password=admin

jolbox.bonecp.idleConnectionTestPeriod=60
jolbox.bonecp.idleMaxAge=240
# The number of connections to create per partition. 
# Setting this to 5 with 3 partitions means you will have 15 unique connections to the database. 
# Note that BoneCP will not create all these connections in one go but rather start off with minConnectionsPerPartition and gradually increase connections as required.
jolbox.bonecp.maxConnectionsPerPartition=60
# The number of connections to start off with per partition.
jolbox.bonecp.minConnectionsPerPartition=20
# In order to reduce lock contention and thus improve performance, each incoming connection request picks off a connection from a pool that has thread-affinity, i.e. pool[threadId % partition_count]. 
# The higher this number, the better your performance will be for the case when you have plenty of short-lived threads. 
# Beyond a certain threshold, maintenence of these pools will start to have a negative effect on performance (and only for the case when connections on a partition start running out).

# Default: 1, minimum: 1, recommended: 3-4 (but very app specific)
jolbox.bonecp.partitionCount=3
# When the available connections are about to run out, BoneCP will dynamically create new ones in batches. 
# This property controls how many new connections to create in one go (up to a maximum of maxConnectionsPerPartition). 
# Note: This is a per partition setting.

# Default: 10
jolbox.bonecp.acquireIncrement=10
jolbox.bonecp.statementsCacheSize=50
jolbox.bonecp.releaseHelperThreads=3
jolbox.bonecp.disableConnectionTracking=true

## Hibernate configuration
###########################################################################
# MySQL
hibernate.dialect=org.hibernate.dialect.MySQLDialect
# MySQL with InnoDB
#hibernate.dialect=org.hibernate.dialect.MySQLInnoDBDialect
# MySQL with MyISAM
#hibernate.dialect=org.hibernate.dialect.MySQLMyISAMDialect
# PostgreSQL
#hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
# DB2
#hibernate.dialect=org.hibernate.dialect.DB2Dialect
# Oracle 8
#hibernate.dialect=org.hibernate.dialect.OracleDialect

hibernate.show_sql=true
hibernate.format_sql=true
hibernate.hbm2ddl.auto=update
hibernate.order_updates=true
hibernate.use_sql_comments=true
hibernate.auto_close_session=true